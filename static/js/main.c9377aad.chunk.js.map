{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","Scroll","style","overflow","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iNAaeA,EAZJ,SAACC,GACR,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,MACrD,gCACR,oBAAIH,UAAU,KAAd,SAAoBD,EAAMK,OAC1B,mBAAGJ,UAAU,KAAb,SAAmBD,EAAMM,eCedC,EApBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACb,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACA,cAAC,EAAD,CAEAP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZK,SCEFC,EATF,SAACZ,GACV,OACI,qBAAKa,MAAO,CAACC,SAAS,SAASC,OAAO,SAAtC,SACKf,EAAMgB,YCOJC,EAXC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC1B,OACI,uBACAlB,UAAU,mCACVmB,KAAK,SACLC,YAAY,iBACZC,SAAUH,KCcHI,G,yDAjBX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,MAAM,CACPC,UAAS,GAHC,E,8DAMAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAGxB,OAAIG,KAAKJ,MAAMC,SACJ,gEAEJG,KAAK5B,MAAMgB,a,GAdEc,cCuCbC,E,kDAnCX,aAAc,IAAD,8BACT,gBAYJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACX,YAAYe,EAAMC,OAAOC,SAZxC,EAAKX,MAAM,CACPhB,OAAO,GACPU,YAAY,IAJP,E,gEAOO,IAAD,OACfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAQ,EAAKX,SAAS,CAACrB,OAAQgC,S,+BAMhC,IAAD,OACEC,EAAeb,KAAKJ,MAAMhB,OAAOkC,QAAO,SAAAlC,GAC1C,OAAOA,EAAOH,KAAKsC,cAAcC,SAAS,EAAKpB,MAAMN,YAAYyB,kBAErE,OACQ,sBAAK1C,UAAU,KAAf,UACI,4CACA,cAAC,EAAD,CAAWkB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQiC,e,GA3B5BX,aCMHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,8BACE,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.c9377aad.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card=(props)=>{\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}`}/>\r\n            <div>\r\n    <h2 className='tc'>{props.name}</h2>\r\n    <p className='tc'>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList=({robots})=>{\r\n    return(\r\n        <div>\r\n            {\r\n            robots.map((user,i)=>{\r\n            return (\r\n            <Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n            />\r\n            );\r\n            })\r\n            }\r\n           \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default CardList;","import React,{Component} from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return (\r\n        <div style={{overflow:'scroll',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Scroll;","import React from 'react';\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n    return(\r\n        <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='Search Friends'\r\n        onChange={searchChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import { render } from '@testing-library/react';\r\nimport React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <h1>OOOOOPS.Something went wrong!!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        } \r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>{this.setState({robots: users})})\r\n        \r\n    }\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield:event.target.value})  \r\n    }\r\n    render(){\r\n        const filteredRobots=this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return(\r\n                <div className='tc'>\r\n                    <h1>My Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './Robots';\n\nReactDOM.render(\n  <div>\n    <App/>\n  \n    </div>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}